pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.luminal2.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.luminal2.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.luminal2.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.luminal2.by.cell$pathway)])
luminal2.wilcox.pval.by.cell[i-2]<-hold$p.value
}
basal.avg.diff.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
basal.avg.diff.by.cell[i-1]<-metabolism.volcano.matrix.brca.average.by.cell[1,i]-metabolism.volcano.matrix.normal.average.by.cell[1,i]
}
luminal1.avg.diff.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
basal.avg.diff.by.cell[i-1]<-metabolism.volcano.matrix.brca.average.by.cell[2,i]-metabolism.volcano.matrix.normal.average.by.cell[2,i]
}
luminal2.avg.diff.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
basal.avg.diff.by.cell[i-1]<-metabolism.volcano.matrix.brca.average.by.cell[3,i]-metabolism.volcano.matrix.normal.average.by.cell[3,i]
}
volcano.plot.basal.matrix.by.cell<-data.frame("pathway"=colnames(metabolism.volcano.matrix.brca.average.by.cell)[3:ncol(metabolism.volcano.matrix.brca.average.by.cell)],
"avg.diff"=as.numeric(basal.avg.diff.by.cell),
"pval"=as.numeric(basal.wilcox.pval.by.cell))
length(basal.avg.diff.by.cell)
basal.wilcox.pval.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.basal.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.basal.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.basal.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.basal.by.cell$pathway)])
basal.wilcox.pval.by.cell[i-1]<-hold$p.value
}
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.basal.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.basal.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.basal.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.basal.by.cell$pathway)])
basal.wilcox.pval.by.cell[i-1]<-hold$p.value
}
luminal1.wilcox.pval.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.luminal1.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.luminal1.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.luminal1.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.luminal1.by.cell$pathway)])
luminal1.wilcox.pval.by.cell[i-1]<-hold$p.value
}
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.basal.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.basal.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.basal.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.basal.by.cell$pathway)])
basal.wilcox.pval.by.cell[i-1]<-hold$p.value
}
luminal1.wilcox.pval.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.luminal1.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.luminal1.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.luminal1.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.luminal1.by.cell$pathway)])
luminal1.wilcox.pval.by.cell[i-1]<-hold$p.value
}
luminal2.wilcox.pval.by.cell<-list()
for (i in 2:ncol(metabolism.volcano.matrix.brca.average.by.cell)){
pathway<-colnames(metabolism.volcano.matrix.brca.average.by.cell)[i]
hold<-wilcox.test(metabolism.volcano.matrix.melt.brca.luminal2.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.brca.luminal2.by.cell$pathway)],
metabolism.volcano.matrix.melt.normal.luminal2.by.cell$score[grep(pathway,metabolism.volcano.matrix.melt.normal.luminal2.by.cell$pathway)])
luminal2.wilcox.pval.by.cell[i-1]<-hold$p.value
}
?log
volcano.plot.basal.matrix.by.cell<-data.frame("pathway"=colnames(metabolism.volcano.matrix.brca.average.by.cell)[3:ncol(metabolism.volcano.matrix.brca.average.by.cell)],
"avg.diff"=as.numeric(basal.avg.diff.by.cell),
"pval"=log10(as.numeric(basal.wilcox.pval.by.cell)))
length(basal.wilcox.pval.by.cell)
length(basal.avg.diff.by.cell)
length(colnames(metabolism.volcano.matrix.brca.average.by.cell)[3:ncol(metabolism.volcano.matrix.brca.average.by.cell)])
volcano.plot.basal.matrix.by.cell<-data.frame("pathway"=colnames(metabolism.volcano.matrix.brca.average.by.cell)[2:ncol(metabolism.volcano.matrix.brca.average.by.cell)],
"avg.diff"=as.numeric(basal.avg.diff.by.cell),
"pval"=log10(as.numeric(basal.wilcox.pval.by.cell)))
volcano.plot.basal.matrix.by.cell
volcano.plot.basal.matrix.by.cell<- mutate(volcano.plot.basal.matrix.by.cell, "direction" = ifelse(volcano.plot.basal.matrix$avg.diff > 0, "BRCA", "Normal"))
ggplot(volcano.plot.basal.matrix, aes(x = avg.diff,
y = pval,
color = direction))+
geom_jitter()+
theme_classic()
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_jitter()+
theme_classic()
volcano.plot.basal.matrix.by.cell<-data.frame("pathway"=colnames(metabolism.volcano.matrix.brca.average.by.cell)[2:ncol(metabolism.volcano.matrix.brca.average.by.cell)],
"avg.diff"=as.numeric(basal.avg.diff.by.cell),
"pval"=-log10(as.numeric(basal.wilcox.pval.by.cell)))
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
theme_classic()
volcano.plot.basal.matrix.by.cell<- mutate(volcano.plot.basal.matrix.by.cell, "direction" = ifelse(volcano.plot.basal.matrix$avg.diff > 0, "BRCA", "Normal"))
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
theme_classic()
volcano.plot.basal.matrix.by.cell<- mutate(volcano.plot.basal.matrix.by.cell, "direction" = ifelse(volcano.plot.basal.matrix.by.cell$avg.diff > 0, "BRCA", "Normal"))
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
theme_classic()
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label(~pathway)
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label(pathway)
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label(aes(pathway))
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label(aes(~pathway))
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label(mapping = pathway)+
theme_classic()
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction,
mapping = pathway))+
geom_point()+
geom_label()+
theme_classic()
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction,
mapping = pathway))+
geom_point()+
geom_label(label=pathway)+
theme_classic()
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction,))+
geom_point()+
geom_label(label=pathway)+
theme_classic()
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_text(label=pathway)+
theme_classic()
volcano.plot.basal.matrix.by.cell
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label_repel(aes(label = pathway),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')+
theme_classic()
library(ggrepel)
ggplot(volcano.plot.basal.matrix.by.cell, aes(x = avg.diff,
y = pval,
color = direction))+
geom_point()+
geom_label_repel(aes(label = pathway),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')+
theme_classic()
UMAP.integrated.data <- readRDS("/Users/paigehalas/Desktop/UMAP.integrated.data.rds")
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
## Data Integration - Standard Workflow
DefaultAssay(p01.counts) <- "RNA"
DefaultAssay(p02.counts) <- "RNA"
DefaultAssay(p10.counts) <- "RNA"
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelia.individual.1.object <- norm.brca.epithelial.individual.object$ind1
norm.brca.epithelia.individual.2.object <- norm.brca.epithelial.individual.object$ind2
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
colnames(norm.brca.epithelial.object@meta.data)
head(norm.brca.epithelial.object$Compartment)
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
## Data Integration - Standard Workflow
DefaultAssay(p01.counts) <- "RNA"
DefaultAssay(p02.counts) <- "RNA"
DefaultAssay(p10.counts) <- "RNA"
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
## Data Integration - Standard Workflow
DefaultAssay(p01.counts) <- "RNA"
DefaultAssay(p02.counts) <- "RNA"
DefaultAssay(p10.counts) <- "RNA"
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
library(Seurat)
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
## Data Integration - Standard Workflow
DefaultAssay(p01.counts) <- "RNA"
DefaultAssay(p02.counts) <- "RNA"
DefaultAssay(p10.counts) <- "RNA"
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
?SplitObject
norm.brca.epithelial.object$individual
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
library(dplyr)
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.object<-SplitObject(norm.brca.epithelial.object,"individual")
DefaultAssay(norm.brca.epithelial.object)
norm.brca.epithelial.object@assays$integrated
norm.brca.epithelial.object
norm.brca.epithelial.object@meta.data$individual
library(Seurat)
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
library(Seurat)
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
library(Seurat)
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
rm(norm.brca.subset.objects)
rm(norm.brca.stromal.object)
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
rm(norm.brca.integrated.epithelial)
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
library(Seurat)
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
View(p01.counts)
## Data Integration - Standard Workflow
DefaultAssay(p01.counts) <- "RNA"
DefaultAssay(p02.counts) <- "RNA"
DefaultAssay(p10.counts) <- "RNA"
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
rm(p01.counts,p02.counts,p10.counts)
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
rm(norm.brca.integrated.epithelial, norm.brca.stromal.object)
rm(norm.brca.subset.objects)
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.individual.1.objects<-norm.brca.epithelial.individual.objects$ind1
norm.brca.epithelial.individual.2.objects<-norm.brca.epithelial.individual.objects$ind2
norm.brca.epithelial.individual.3.objects<-norm.brca.epithelial.individual.objects$ind3
norm.brca.epithelial.individual.4.objects<-norm.brca.epithelial.individual.objects$ind4
norm.brca.epithelial.individual.9.objects<-norm.brca.epithelial.individual.objects$ind9
norm.brca.epithelial.individual.10.objects<-norm.brca.epithelial.individual.objects$ind10
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
#To construct a reference, we will identify ‘anchors’ between the individual datasets. First, we combine each Seurat object into a list, with each dataset as an element.
#The list() function groups elements together in the form of list("X1"=Y1,"X2",Y2,...), where Xn is the name you want the list element to be called and Yn is the component you want added to the list. For this analysis, we want to keep track of which Seurat object belongs to which model/patient.
#first part
#Norm.BRCA dataset needs to be on the RNA matrix like the other three PDX model datasets
#DefaultAssay(norm.brca.epithelial.object) <- "RNA"
standard.workflow.object.list <-
#list("hci001"=p01.cc.updated,"hci002"=p02.updated,"hci010"=p10.updated)
list("hci001"=p01.counts,"hci002"=p02.counts,"hci010"=p10.counts,"n_patient1"=norm.brca.epithelial.individual.1.objects, "b_patient2"=norm.brca.epithelial.individual.2.objects, "b_patient3"=norm.brca.epithelial.individual.3.objects, "b_patient4" = norm.brca.epithelial.individual.4.objects, "n_patient9" = norm.brca.epithelial.individual.9.objects, "n_patient10"=norm.brca.epithelial.individual.10.objects )
rm(p01.counts,p02.counts,p10.counts,norm.brca.epithelial.object,norm.brca.epithelial.individual.1.objects,norm.brca.epithelial.individual.10.objects,norm.brca.epithelial.individual.2.objects,norm.brca.epithelial.individual.3.objects,norm.brca.epithelial.individual.4.objects,norm.brca.epithelial.individual.9.objects,norm.brca.epithelial.individual.objects,norm.brca.epithelial.object,norm.brca.integrated.epithelial,norm.brca.stromal.object,norm.brca.subset.objects)
#Prior to finding anchors, we perform standard preprocessing (log-normalization), and identify variable features individually for each. Note that Seurat v3 implements an improved method for variable feature selection based on a variance stabilizing transformation ("vst")
for (i in 1:length(standard.workflow.object.list)) {
standard.workflow.object.list[[i]] <- NormalizeData(standard.workflow.object.list[[i]], verbose = TRUE)
standard.workflow.object.list[[i]] <- FindVariableFeatures(standard.workflow.object.list[[i]], selection.method = "vst",
nfeatures = 2000, verbose = TRUE)
}
#Next we find anchors, which are pairwise correspondants between individual cells which originate from the same biological state. These anchors are then used to transfer infromation from one dataset to another
reference.list <- standard.workflow.object.list
integration.anchors <- FindIntegrationAnchors(object.list = reference.list, dims = 1:30)
rm(reference.list,standard.workflow.object.list)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
library(Seurat)
#Norm/BRCA
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/norm.brca.integrated.epithelial.Rda")
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "Compartment" column, to generate two new objects, the epithelial compartment and the stromal compartment
norm.brca.subset.objects<-SplitObject(norm.brca.integrated.epithelial,"Compartment")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.object<-norm.brca.subset.objects$EPITHELIAL
norm.brca.stromal.object<-norm.brca.subset.objects$STROMAL
#SplitObject command will generate subsets of a Seurat object in list form based on the given metadata column. For this, we subset on the "individual" column, to generate 6 new objects, for each patient.
norm.brca.epithelial.individual.objects<-SplitObject(norm.brca.epithelial.object,"individual")
#We now seperate out each component of the list into seperate Seurat objects. The "$" command specifies which part of the full list we want to access.
norm.brca.epithelial.individual.1.objects<-norm.brca.epithelial.individual.objects$ind1
norm.brca.epithelial.individual.2.objects<-norm.brca.epithelial.individual.objects$ind2
norm.brca.epithelial.individual.3.objects<-norm.brca.epithelial.individual.objects$ind3
norm.brca.epithelial.individual.4.objects<-norm.brca.epithelial.individual.objects$ind4
norm.brca.epithelial.individual.9.objects<-norm.brca.epithelial.individual.objects$ind9
norm.brca.epithelial.individual.10.objects<-norm.brca.epithelial.individual.objects$ind10
rm(norm.brca.epithelial.object,norm.brca.stromal.object,norm.brca.subset.objects)
#HCI001
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci001.expected.counts.trimmed.seurat3.object.Rda")
#HCI002
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci002.expected.counts.trimmed.seurat3.object.Rda")
#HCI010
load("/Users/paigehalas/ph-future-phd/pdx-norm-brca-integration-project/seurat-objects/hci010.expected.counts.trimmed.seurat3.object.Rda")
## Data Integration - Standard Workflow
DefaultAssay(p01.counts) <- "RNA"
DefaultAssay(p02.counts) <- "RNA"
DefaultAssay(p10.counts) <- "RNA"
DefaultAssay(norm.brca.integrated.epithelial) <- "RNA"
#To construct a reference, we will identify ‘anchors’ between the individual datasets. First, we combine each Seurat object into a list, with each dataset as an element.
#The list() function groups elements together in the form of list("X1"=Y1,"X2",Y2,...), where Xn is the name you want the list element to be called and Yn is the component you want added to the list. For this analysis, we want to keep track of which Seurat object belongs to which model/patient.
#first part
#Norm.BRCA dataset needs to be on the RNA matrix like the other three PDX model datasets
#DefaultAssay(norm.brca.epithelial.object) <- "RNA"
standard.workflow.object.list <-
#list("hci001"=p01.cc.updated,"hci002"=p02.updated,"hci010"=p10.updated)
list("hci001"=p01.counts,"hci002"=p02.counts,"hci010"=p10.counts,"n_patient1"=norm.brca.epithelial.individual.1.objects, "b_patient2"=norm.brca.epithelial.individual.2.objects, "b_patient3"=norm.brca.epithelial.individual.3.objects, "b_patient4" = norm.brca.epithelial.individual.4.objects, "n_patient9" = norm.brca.epithelial.individual.9.objects, "n_patient10"=norm.brca.epithelial.individual.10.objects )
rm(p01.counts,p02.counts,p10.counts,norm.brca.epithelial.individual.1.objects,norm.brca.epithelial.individual.10.objects,norm.brca.epithelial.individual.2.objects,norm.brca.epithelial.individual.3.objects,norm.brca.epithelial.individual.4.objects,norm.brca.epithelial.individual.9.objects,norm.brca.epithelial.individual.objects,norm.brca.integrated.epithelial)
#Prior to finding anchors, we perform standard preprocessing (log-normalization), and identify variable features individually for each. Note that Seurat v3 implements an improved method for variable feature selection based on a variance stabilizing transformation ("vst")
for (i in 1:length(standard.workflow.object.list)) {
standard.workflow.object.list[[i]] <- NormalizeData(standard.workflow.object.list[[i]], verbose = TRUE)
standard.workflow.object.list[[i]] <- FindVariableFeatures(standard.workflow.object.list[[i]], selection.method = "vst",
nfeatures = 2000, verbose = TRUE)
}
#Next we find anchors, which are pairwise correspondants between individual cells which originate from the same biological state. These anchors are then used to transfer infromation from one dataset to another
reference.list <- standard.workflow.object.list
integration.anchors <- FindIntegrationAnchors(object.list = reference.list, dims = 1:30)
rm(reference.list,standard.workflow.object.list)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
#After
integrated.data <- IntegrateData(anchorset = integration.anchors, dims = 1:30)
